version: "3.9"

services:

  frontend:
    image: projet_initiative_asso-frontend
    build:
      context: .
      dockerfile: Dockerfile-frontend
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      # Route vers le frontend (tout sauf /api)
      - "traefik.http.routers.olivier-web.rule=Host(`olivier.nocturlab.fr`)"
      - "traefik.http.services.olivier-web.loadbalancer.server.port=80"
    networks:
      - traefik
      - app

  backend:
    image: projet_initiative_asso-backend
    build:
      context: .
      dockerfile: Dockerfile-backend
    ports:
      - "8075:8080"    # API dispo aussi en direct sur le port 8075 (debug)
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: db_initiative_asso
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    depends_on:
      db:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_default"

      # HTTP (même si redirigé par Traefik, on le met pour être propre)
      - "traefik.http.routers.olivier-api.rule=Host(`olivier.nocturlab.fr`) && PathPrefix(`/api`)"
      - "traefik.http.routers.olivier-api.entrypoints=web"
      - "traefik.http.routers.olivier-api.priority=100"
      - "traefik.http.services.olivier-api.loadbalancer.server.port=8080"

      # HTTPS (le point clé pour ton 502)
      - "traefik.http.routers.olivier-api-https.rule=Host(`olivier.nocturlab.fr`) && PathPrefix(`/api`)"
      - "traefik.http.routers.olivier-api-https.entrypoints=websecure"
      - "traefik.http.routers.olivier-api-https.tls=true"
      - "traefik.http.routers.olivier-api-https.priority=100"
      - "traefik.http.services.olivier-api-https.loadbalancer.server.port=8080"

    networks:
      - traefik
      - db
      - app

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: db_initiative_asso
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d db_initiative_asso" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - db

networks:
  db:
  traefik:
    external: true
    name: traefik_default
  app:
    driver: bridge

volumes:
  postgres-data:
